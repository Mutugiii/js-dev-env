{"version":3,"sources":["webpack:///main.da4a372cf9ce23bbcfb2.js","webpack:///./src/index.js","webpack:///./src/api/userApi.js","webpack:///./src/api/baseUrl.js"],"names":["webpackJsonp","module","exports","__webpack_require__","global","_userApi","getUsers","then","result","userBody","forEach","user","id","firstName","lastName","email","document","getElementById","innerHTML","deleteLinks","getElementsByClassName","Array","from","link","onclick","event","element","target","preventDefault","deleteUser","attributes","value","row","parentNode","removeChild","call","this","_interopRequireDefault","obj","__esModule","default","get","del","url","fetch","baseUrl","onSuccess","onError","request","Request","method","response","json","error","console","log","Object","defineProperty","_baseUrl","_baseUrl2","getBaseUrl","getQueryStringParameterByName","name","window","location","href","replace","regex","RegExp","results","exec","decodeURIComponent"],"mappings":"AAAAA,cAAc,IAER,SAASC,EAAQC,EAASC,IAEH,SAASC,GAAS,YCJ/CD,GAAA,EAYA,IAAAE,GAAAF,EAAA,IAKA,EAAAE,EAAAC,YAAWC,KAAK,SAAAC,GACd,GAAIC,GAAW,EAEfD,GAAOE,QAAQ,SAAAC,GACbF,yCAC2BE,EAAKC,GADhC,iDAEMD,EAAKC,GAFX,kBAGMD,EAAKE,UAHX,kBAIMF,EAAKG,SAJX,kBAKMH,EAAKI,MALX,qBASFX,EAAOY,SAASC,eAAe,SAASC,UAAYT,CAEpD,IAAMU,GAAcf,EAAOY,SAASI,uBAAuB,aAI3DC,OAAMC,KAAKH,EAAa,SAAAI,GACtBA,EAAKC,QAAU,SAASC,GACtB,GAAMC,GAAUD,EAAME,MACtBF,GAAMG,kBACN,EAAAvB,EAAAwB,YAAWH,EAAQI,WAAW,WAAWC,MACzC,IAAMC,GAAMN,EAAQO,WAAWA,UAC/BD,GAAIC,WAAWC,YAAYF,UDOHG,KAAKjC,EAAU,WAAa,MAAOkC,WAI3D,SAASnC,EAAQC,KAKhB,CAED,SAASD,EAAQC,EAASC,GAE/B,YAcA,SAASkC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GEtEjF,QAAShC,KACd,MAAOmC,GAAI,SAIN,QAASZ,GAAWjB,GACzB,MAAO8B,YAAa9B,GAGtB,QAAS6B,GAAIE,GACX,MAAOC,OAAMC,EAAUF,GAAKpC,KAAKuC,EAAWC,GAI9C,QAASL,GAAIC,GACX,GAAMK,GAAU,GAAIC,SAAQJ,EAAUF,GACpCO,OAAQ,UAGV,OAAON,OAAMI,GAASzC,KAAKuC,EAAUC,GAIvC,QAASD,GAAUK,GACjB,MAAOA,GAASC,OAIlB,QAASL,GAAQM,GACfC,QAAQC,IAAIF,GF6BbG,OAAOC,eAAevD,EAAS,cAC7B6B,OAAO,IAET7B,EE7DeI,WF8DfJ,EEzDe2B,aAXhB1B,EAAA,EACA,IAAAuD,GAAAvD,EAAA,GFyEKwD,EAAYtB,EAAuBqB,GEvElCb,GAAU,EAAAc,iBFkHT,CAED,SAAS1D,EAAQC,GAEtB,YGzHc,SAAS0D,KAGtB,MAAOC,GAA8B,cAAgB,yBAA2B,+CAGlF,QAASA,GAA8BC,EAAMnB,GACvCA,IAAKA,EAAMoB,OAAOC,SAASC,MAC/BH,EAAOA,EAAKI,QAAQ,UAAW,OAC/B,IAAIC,GAAQ,GAAIC,QAAO,OAASN,EAAO,qBACnCO,EAAUF,EAAMG,KAAK3B,EACzB,OAAI0B,GACAA,EAAQ,GACLE,mBAAmBF,EAAQ,GAAGH,QAAQ,MAAO,KAD7B,GADH,KHgHrBV,OAAOC,eAAevD,EAAS,cAC7B6B,OAAO,IAET7B,aG9HuB0D","file":"main.da4a372cf9ce23bbcfb2.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\t__webpack_require__(1);\n\t\n\tvar _userApi = __webpack_require__(3);\n\t\n\t//importing our API\n\t//import {link} from 'fs';\n\t\n\t//populate Users via API call\n\t//make class to getUsers and use the then func from the promise to handle result received from API\n\t(0, _userApi.getUsers)().then(function (result) {\n\t  var userBody = '';\n\t\n\t  result.forEach(function (user) {\n\t    userBody += '<tr>\\n    <td><a href=\"#\" data-id=\"' + user.id + '\" class=\"deleteUser\">Delete</a></td>\\n    <td>' + user.id + '</td>\\n    <td>' + user.firstName + '</td>\\n    <td>' + user.lastName + '</td>\\n    <td>' + user.email + '</td>\\n    </tr>';\n\t  });\n\t\n\t  global.document.getElementById('users').innerHTML = userBody;\n\t\n\t  var deleteLinks = global.document.getElementsByClassName('deleteUser');\n\t\n\t  //Must use array.from to create a real array from a DOM collection\n\t  //getElementsByClassName only returns an 'array like' object\n\t  Array.from(deleteLinks, function (link) {\n\t    //iterate through all links\n\t    link.onclick = function (event) {\n\t      //add a click event\n\t      var element = event.target; //prevent the default of a change to url\n\t      event.preventDefault();\n\t      (0, _userApi.deleteUser)(element.attributes[\"data-id\"].value); //call deleteUser to remove a clicked row from the DOM\n\t      var row = element.parentNode.parentNode;\n\t      row.parentNode.removeChild(row);\n\t    };\n\t  });\n\t});\n\t\n\t// import numeral from 'numeral';\n\t\n\t// /* eslint-disable no-console*/\n\t// /* eslint-disable no-debugger*/\n\t\n\t// const courseValue = numeral(1000).format('$0,0.00');\n\t// debugger;\n\t// console.log(`I would pay ${courseValue} for this awesome course!`);\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 2 */,\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.getUsers = getUsers;\n\texports.deleteUser = deleteUser;\n\t\n\t__webpack_require__(4);\n\t\n\tvar _baseUrl = __webpack_require__(5);\n\t\n\tvar _baseUrl2 = _interopRequireDefault(_baseUrl);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t//importing baseUrl file to help know where to serve data from depending on mode\n\t\n\tvar baseUrl = (0, _baseUrl2.default)();\n\t\n\t//only public function\n\t//importing the polyfill so that it works in browsers that don't natively support it\n\tfunction getUsers() {\n\t  return get('users');\n\t}\n\t\n\t//function to delete user\n\tfunction deleteUser(id) {\n\t  return del('users/' + id);\n\t}\n\t\n\tfunction get(url) {\n\t  return fetch(baseUrl + url).then(onSuccess, onError);\n\t}\n\t\n\t//can't call function delete as it is a keyword in js\n\tfunction del(url) {\n\t  var request = new Request(baseUrl + url, {\n\t    method: 'DELETE'\n\t  });\n\t\n\t  return fetch(request).then(onSuccess, onError);\n\t}\n\t\n\t//one place to keep track of any calls in progress\n\tfunction onSuccess(response) {\n\t  return response.json();\n\t}\n\t\n\t//centralized error handling\n\tfunction onError(error) {\n\t  console.log(error); //eslint-disable-line no-console\n\t}\n\n/***/ },\n/* 4 */,\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = getBaseUrl;\n\tfunction getBaseUrl() {\n\t  //const inDevelopment = window.location.hostname === 'localhost';     //file will look at hostname to determine if app is running in dev\n\t  //return inDevelopment ? 'http://localhost:3001/' : '/';              //if in dev points at mockapi hosted at port 3001 & if production uses the server set up in srcServer\n\t  return getQueryStringParameterByName('useMockApi') ? 'http://localhost:3001/' : 'https://protected-ocean-70759.herokuapp.com/'; //same logc as above\n\t}\n\t\n\tfunction getQueryStringParameterByName(name, url) {\n\t  if (!url) url = window.location.href;\n\t  name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n\t  var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n\t      results = regex.exec(url);\n\t  if (!results) return null;\n\t  if (!results[2]) return '';\n\t  return decodeURIComponent(results[2].replace(/\\+/g, \"\"));\n\t}\n\n/***/ }\n]);\n\n\n/** WEBPACK FOOTER **\n ** main.da4a372cf9ce23bbcfb2.js\n **/","import './index.css';\n\n// import numeral from 'numeral';\n\n// /* eslint-disable no-console*/\n// /* eslint-disable no-debugger*/\n\n// const courseValue = numeral(1000).format('$0,0.00');\n// debugger;\n// console.log(`I would pay ${courseValue} for this awesome course!`);\n\n\nimport {getUsers, deleteUser} from '../src/api/userApi';  //importing our API\n//import {link} from 'fs';\n\n//populate Users via API call\n//make class to getUsers and use the then func from the promise to handle result received from API\ngetUsers().then(result => {\n  let userBody = '';\n\n  result.forEach(user => {\n    userBody += `<tr>\n    <td><a href=\"#\" data-id=\"${user.id}\" class=\"deleteUser\">Delete</a></td>\n    <td>${user.id}</td>\n    <td>${user.firstName}</td>\n    <td>${user.lastName}</td>\n    <td>${user.email}</td>\n    </tr>`\n  });\n\n  global.document.getElementById('users').innerHTML = userBody;\n\n  const deleteLinks = global.document.getElementsByClassName('deleteUser')\n\n  //Must use array.from to create a real array from a DOM collection\n  //getElementsByClassName only returns an 'array like' object\n  Array.from(deleteLinks, link => {                           //iterate through all links\n    link.onclick = function(event) {                          //add a click event\n      const element = event.target;                           //prevent the default of a change to url\n      event.preventDefault();\n      deleteUser(element.attributes[\"data-id\"].value);        //call deleteUser to remove a clicked row from the DOM\n      const row = element.parentNode.parentNode;\n      row.parentNode.removeChild(row);\n    }\n  });\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","import 'whatwg-fetch';  //importing the polyfill so that it works in browsers that don't natively support it\nimport getBaseUrl from './baseUrl';       //importing baseUrl file to help know where to serve data from depending on mode\n\nconst baseUrl = getBaseUrl();\n\n//only public function\nexport function getUsers() {\n  return get('users');\n}\n\n//function to delete user\nexport function deleteUser(id) {\n  return del(`users/${id}`);\n}\n\nfunction get(url) {\n  return fetch(baseUrl + url).then(onSuccess, onError);\n}\n\n//can't call function delete as it is a keyword in js\nfunction del(url) {\n  const request = new Request(baseUrl + url, {\n    method: 'DELETE'\n  });\n\n  return fetch(request).then(onSuccess,onError);\n}\n\n//one place to keep track of any calls in progress\nfunction onSuccess(response) {\n  return response.json();\n}\n\n//centralized error handling\nfunction onError(error) {\n  console.log(error); //eslint-disable-line no-console\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/api/userApi.js\n **/","export default function getBaseUrl() {\n  //const inDevelopment = window.location.hostname === 'localhost';     //file will look at hostname to determine if app is running in dev\n  //return inDevelopment ? 'http://localhost:3001/' : '/';              //if in dev points at mockapi hosted at port 3001 & if production uses the server set up in srcServer\n  return getQueryStringParameterByName('useMockApi') ? 'http://localhost:3001/' : 'https://protected-ocean-70759.herokuapp.com/';    //same logc as above\n}\n\nfunction getQueryStringParameterByName(name, url) {\n  if(!url) url = window.location.href;\n  name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n  var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n      results = regex.exec(url);\n  if(!results) return null;\n  if(!results[2]) return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, \"\"));\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/api/baseUrl.js\n **/"],"sourceRoot":""}